[tox]
envlist = {test}


[testenv]
deps =
    -rrequirements.txt
    develop: uvicorn
    lint,develop: flake8
    lint,develop: pipenv
    lint,develop: flake8-import-order
    lint,develop: flake8-eradicate
    lint,develop: flake8-docstrings
    test,develop: pytest
    test,develop: pytest-cov
    test,develop: tox
    cq,develop: pylint
    types,develop: mypy
    types,develop: lxml
    security,develop: bandit
    build-docker,docs,develop: sphinx
    build-docker,docs,develop: sphinx_github_changelog
    build-docker,docs,develop: sphinx_material
    build,develop: wheel<=0.30.0

commands =
    lint: flake8 src/
    lint: pipenv check
    test: pytest -rs tests/unit --log-level=WARNING --cov={{cookiecutter.package}} --cov-report html:{toxinidir}/reports/{envname}-coverage.html
    docs: python -m sphinx -b html -a {toxinidir}/docs/source {toxinidir}/docs/html
    security: python -c "import os; a = 1 if os.path.exists('reports') else os.makedirs('reports')"
    security: bandit -r src/ --format xml --output reports/security-results.xml -x *_version.py
    security: bandit -r src/  -x *_version.py
    types: python -c "import os; a = 1 if os.path.exists('reports') else os.makedirs('reports')"
    types: mypy -p {{cookiecutter.package}} --linecoverage-report reports --junit-xml reports/mypy.xml --cobertura-xml-report test-reports

passenv =
    build-docker, docs: SPHINX_GITHUB_CHANGELOG_TOKEN
    build-docker: TAG

[testenv:setup_version]
deps = versioneer
commands = versioneer install
skip_install=True


[testenv:develop]
skip_install = True
envdir = {toxinidir}/.venv
commands =
    pip install -rrequirements.txt
    python setup.py develop

[testenv:build-package]
commands =
    python setup.py sdist
    python setup.py bdist_wheel

[testenv:build-docker]
skip_install = False
sdist = True
commands =
    python setup.py bdist_wheel --dist-dir={toxinidir}/docker-build
    docker build -t {{cookiecutter.package}}:{env:VERSION:{env:TAG:latest}} .
    python -c "import shutil; shutil.rmtree('docker-build')"
whitelist_externals=
    docker
passenv =
    VERSION
    TAG

[testenv:serve]
; Debug server for local development
commands =
    pip install -r requirements.txt
    python setup.py develop
    python -m {{cookiecutter.package}}.server
skip_install = True
envdir = {toxinidir}/.venv
