{% raw %}
name: Build & Publish

on:
  push:
    tags:
      - '*.*.*'
  release:
    types: [published]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Lint
        run: tox -e lint
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test
      run: tox -e test


  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox twine
      - name: Build package
        run: tox -e build
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(python setup.py --version)
      - name:
        run: |
              twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          TAG: ${{ steps.get_version.outputs.VERSION }}
        if: startsWith(github.ref, 'refs/tags')
  {% endraw %}